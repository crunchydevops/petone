---
- hosts: all
  become: true
  roles:
    - role.ntp
  tasks:
    - name:  update cache
      yum: update_cache=yes
    - name:  add epel release
      yum:
        name: epel-release
        state: latest
    - name: install all packages
      yum:
        name: "{{ packages }}"
      vars:
        packages:
          - autoconf
          - automake
          - bison
          - cmockery2-devel
          - dos2unix
          - flex
          - fuse-devel
          - glib2-devel
          - libacl-devel
          - libaio-devel
          - libattr-devel
          - libcurl-devel
          - libibverbs-devel
          - librdmacm-devel
          - libtirpc-devel
          - libtool
          - libxml2-devel
          - lvm2-devel
          - make
          - openssl-devel
          - pkgconfig
          - pyliblzma
          - python-devel
          - python-eventlet
          - python-netifaces
          - python-paste-deploy
          - python-simplejson
          - python-sphinx
          - python-webob
          - pyxattr
          - readline-devel
          - rpm-build
          - sqlite-devel
          - systemtap-sdt-devel
          - tar
          - userspace-rcu-devel
    - name: get glusterfs tar file
      get_url:
          url: https://download.gluster.org/pub/gluster/glusterfs/LATEST/glusterfs-7.4.tar.gz
          dest: /home/{{ ansible_ssh_user }}
          checksum: sha256:8b3b11a733edfb5a5045388add8311efa950d59f37f5771bf01b7dd8b4885973
    - name:
      unarchive:
        src: /home/{{ ansible_ssh_user }}/glusterfs-7.4.tar.gz
        dest: /home/{{ ansible_ssh_user }}
        remote_src: yes
    - name: run autogen.sh
      shell: cd /home/{{ ansible_ssh_user }}/glusterfs-7.4 && ./autogen.sh
    - name: run configure
      shell: cd /home/{{ ansible_ssh_user }}/glusterfs-7.4 && ./configure --with-ipv6-default
    - name: run make
      shell:  cd /home/{{ ansible_ssh_user }}/glusterfs-7.4 && make
    - name: run make install
      shell:  cd /home/{{ ansible_ssh_user }}/glusterfs-7.4 && make install
    - name: create system directory
      file:
        path: /usr/lib/systemd/system/
        state: directory
        mode: '0755'
    - name: copy glusterd.service file
      copy:
        src: /home/{{ ansible_ssh_user }}/glusterfs-7.4/extras/systemd/glusterd.service
        dest: /usr/lib/systemd/system/
        remote_src: yes
    - name: Start glusterfs service
      systemd:
        state: started
        name: glusterd
    - name: Create new partition on /dev/vdc
      parted:
        device: /dev/vdc
        number: 1
        state: present
        part_end: 2GiB
    - name: format the device
      filesystem:
        fstype: xfs
        dev: /dev/vdc1
    - name: get public ip
      ipify_facts:
      register: public_ip
    - name: Update /etc/hosts
      template:
        src: ip_hostname.j2
        dest: /home/{{ ansible_ssh_user }}/temp_hostname
    - name: Remplace public ip by localhost to avoid NAT issue for glusterfs
      replace:
        path: /home/{{ ansible_ssh_user }}/temp_hostname
        regexp: '^{{ public_ip.ansible_facts.ipify_public_ip }}'
        replace: '127.0.0.1'
    - name: Check if ansible comment is set on
      shell: "grep Ansible /etc/hosts"
      register: check_ip_on
      ignore_errors: yes
    - name: get value using slurp
      slurp:
        src: "/home/{{ ansible_ssh_user }}/temp_hostname"
      register: values
    - name: insert values in /etc/motd
      blockinfile:
        block: "{{ values['content'] | b64decode }}"
        path: /etc/hosts
        backup: yes
      when: check_ip_on.rc == 1
- hosts: leader
  become: true
  tasks:
    - name: